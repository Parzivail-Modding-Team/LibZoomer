plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.0'
	id 'maven-publish'
	id 'signing'
}

// Visual Studio Code completely ignores options.release.
// So, we still have those two.
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = System.env.GITHUB_ACTIONS == "true"
	? "${project.mod_version}.github.${System.env.GITHUB_RUN_NUMBER}"
	: project.mod_version
group = project.maven_group

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

repositories {
	maven {
		url = "https://maven.quiltmc.org/repository/release"
		name = "QuiltMC"
	}
}

dependencies {
	// To change the versions, see the gradle.properties file
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	modImplementation libs.fabric.loader

	modCompileOnly libs.fabric.api
	modLocalRuntime libs.fabric.api

	afterEvaluate {
		testmodImplementation sourceSets.main.output
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Ensure that the encoding is set to UTF-8, no matter what the system default is.
	// This fixes some edge cases with special characters not displaying correctly.
	// See http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withJavadocJar()
	withSourcesJar()
}

jar {
	from "LICENSE"
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			pom {
				name = 'LibZoomer'
				description = 'A library that allows other Minecraft mods to have powerful zooming easily. (internal fork)'
				url = 'https://github.com/Parzivail-Modding-Team/LibZoomer'
				licenses {
					license {
						name = 'The MIT License'
						url = 'https://opensource.org/licenses/MIT'
					}
				}
				developers {
					developer {
						id = 'EnnuiL'
						name = 'Ennui Langeweile'
					}
				}
				scm {
					connection = 'scm:git:https://github.com/Parzivail-Modding-Team/LibZoomer.git'
					developerConnection = 'scm:git:git@github.com:Parzivail-Modding-Team/LibZoomer.git'
					url = 'https://github.com/Parzivail-Modding-Team/LibZoomer'
				}
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		maven {
			name = "central"
			url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"

			if (project.hasProperty("ossrhUsername") && project.hasProperty("ossrhPassword"))
				credentials {
					username = ossrhUsername
					password = ossrhPassword
				}
		}
	}
}

signing {
	useGpgCmd()
	sign publishing.publications.mavenJava
}
